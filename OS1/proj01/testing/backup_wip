#!/bin/bash
#test for assignment 01
FILENAME=""
#func to print error msg for bad call invocation
usage(){
	#error msg
	echo "bad call stub"
}
#func to print error msg for bad filename and/or missing file
invalid(){
	#error msg
	echo "file not found stub"
}
processFile(){
	tempfile="tempSortFile"
	echo "Average	Median"
	while read currLine; do
		sum=0												#adding container
		count=0											#num of items in row
		mean=0											#average
		median=0										#median val
		midPtr=0										#middle item in list
		for i in $currLine; do			#process line
			((sum+=$i))								#adjust sum
			((count+=1))							#increment count
			echo $i >> $tempfile 			#append to sort file
		done
		midPtr=$((1+count/2))																					#calculate mid point
		median=$( sort -n $tempfile | head -n "$midPtr" | tail -n 1 )	#get median value
		mean=`expr $sum / $count`																			#get mean NOT WORKING 100%
		echo "$mean	$median"																					#display data
		rm $tempfile																									#cleanup
	done < $FILENAME
}
#switch to handle command line arguments
while [ "$1" != "" ]; do
	case $1 in
		-c | -col | --col | -cols | --cols	)	shift					#shift arguments left
																					FILENAME=$1		#get filename
																					MODE=c				#set mode
																					;;
		-r | -row | --row | -rows | --rows	)	shift					#shift arguments left	
																					FILENAME=$1		#get filename
																					MODE=r				#set mode
																					;;
		-h | -help | --help	)									usage
																					exit
																					;;
		*	)																		usage					#incorrect call -> print usage
																					exit 1
	esac
	shift																									#shift again to make $# == 0 if called correctly !IMPORTANT
done
#decide what to do based on call structure
if [ "$FILENAME" == "" ] && [ "$MODE" == "c" ]; then			#read cols from stdin
	echo "stdin: cols: i don't work yet"
	#read stuff
	#cat > tempfile
	exit
elif [ "$FILENAME" == "" ] && [ "$MODE" == "r" ]; then		#read rows from stdin
	echo "stdin: rows: i don't work yet"
	#read stuff
	#cat > tempfile
	exit
elif ! [ -f $FILENAME ]; then			#bad filename
	invalid
	exit 2
elif [ $MODE == "c" ]; then			#work on columns
	echo "in column mode"
	echo "col: i don't work yet either"
	cat $FILENAME
	exit
elif [ $MODE == "r" ]; then			#work on rows
	processFile
	echo -e "\n\n"

	tempfile="tempSortFile"
	echo "in row mode"
	echo "Average	Median"
	while read currLine						#loop through each row in the file
	do
		#echo $currLine
		sum=0												#
		count=0											#num of items in row
		mean=0											#average
		median=0										#median val
		for i in $currLine
		do
			((sum+=$i))								#adjust sum
			((count+=1))							#increment count
			echo $i >> $tempfile 
		done
		midPtr=$((1+count/2))
		median=$( sort -n $tempfile | head -n "$midPtr" | tail -n 1 )	#get median value
		mean=`expr $sum / $count`																			#get mean NOT WORKING 100%
		echo "$mean	$median"
		rm $tempfile
	done < $FILENAME
	exit
fi



#wc test_file > out
#read lines words characters filename < out
#cut -d $'\t' -f 1 test_file
