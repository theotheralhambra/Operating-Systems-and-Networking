pkill: killing pid 360 failed: Operation not permitted
pkill: killing pid 398 failed: Operation not permitted
pkill: killing pid 2470 failed: Operation not permitted
pkill: killing pid 5980 failed: Operation not permitted
pkill: killing pid 5998 failed: Operation not permitted
pkill: killing pid 6192 failed: Operation not permitted
pkill: killing pid 6194 failed: Operation not permitted
pkill: killing pid 8596 failed: Operation not permitted
pkill: killing pid 9455 failed: Operation not permitted
pkill: killing pid 12724 failed: Operation not permitted
pkill: killing pid 15645 failed: Operation not permitted
pkill: killing pid 16305 failed: Operation not permitted
pkill: killing pid 16693 failed: Operation not permitted
pkill: killing pid 16731 failed: Operation not permitted
pkill: killing pid 17222 failed: Operation not permitted
pkill: killing pid 19165 failed: Operation not permitted
pkill: killing pid 19590 failed: Operation not permitted
pkill: killing pid 20224 failed: Operation not permitted
pkill: killing pid 22390 failed: Operation not permitted
pkill: killing pid 28578 failed: Operation not permitted
pkill: killing pid 31594 failed: Operation not permitted
pkill: killing pid 32467 failed: Operation not permitted
pkill: killing pid 36866 failed: Operation not permitted
pkill: killing pid 39659 failed: Operation not permitted
pkill: killing pid 42377 failed: Operation not permitted
pkill: killing pid 42963 failed: Operation not permitted
pkill: killing pid 48784 failed: Operation not permitted
pkill: killing pid 48865 failed: Operation not permitted
./p3testscript: line 110:  7121 Quit                    (core dumped) ./smallsh  <<'___EOF___'
echo BEGINNING TEST SCRIPT
echo
echo --------------------
echo Using comment (5 points if only next prompt is displayed next)
#THIS COMMENT SHOULD DO NOTHING
echo
echo
echo --------------------
echo ls (10 points for returning dir contents)
ls
echo
echo
echo --------------------
echo ls out junk
ls > junk
echo
echo
echo --------------------
echo cat junk (15 points for correctly returning contents of junk)
cat junk
echo
echo
echo --------------------
echo wc in junk (15 points for returning correct numbers from wc)
wc < junk
echo
echo
echo --------------------
echo wc in junk out junk2; cat junk2 (10 points for returning correct numbers from wc)
wc < junk > junk2
cat junk2
echo
echo
echo --------------------
echo test -f badfile (10 points for returning error value of 1, note extraneous &)
test -f badfile
status &
echo
echo
echo --------------------
echo wc in badfile (10 points for returning text error)
wc < badfile
echo
echo
echo --------------------
echo badfile (10 points for returning text error)
badfile
echo
echo
echo --------------------
echo sleep 100 background (10 points for returning process ID of sleeper)
sleep 100 &
echo
echo
echo --------------------
echo pkill -signal SIGTERM sleep (10 points for pid of killed process, 10 points for signal)
echo (Ignore message about Operation Not Permitted)
pkill sleep
echo
echo
echo --------------------
echo sleep 1 background (10 pts for pid of bg ps when done, 10 for exit value)
sleep 1 &
sleep 1
echo
echo
echo --------------------
echo pwd
pwd
echo
echo
echo --------------------
echo cd
cd
echo
echo
echo --------------------
echo pwd (10 points for being in the HOME dir)
pwd
echo
echo
echo --------------------
echo mkdir testdir$$
mkdir testdir$$
echo
echo
echo --------------------
echo cd testdir$$
cd testdir$$
echo
echo
echo --------------------
echo pwd (5 points for being in the newly created dir)
pwd
echo --------------------
echo Testing foreground-only mode (20 points for entry & exit text AND ~5 seconds between times)
kill -SIGTSTP $$
date
sleep 5 &
date
kill -SIGTSTP $$
exit
___EOF___

